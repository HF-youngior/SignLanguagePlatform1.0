version: '3.8'

services:
  # MongoDB 数据库
  mongodb:
    image: mongo:7.0
    container_name: signlang-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: signlanguage
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - signlang-network

  # 后端 API 服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: signlang-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: production
      PORT: 8000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/signlanguage?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key
      AI_SERVICE_URL: http://ai-service:8001
    depends_on:
      - mongodb
      - ai-service
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - signlang-network

  # AI 微服务
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: signlang-ai-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      PYTHONPATH: /app
      MODEL_PATH: /app/models
    volumes:
      - ./ai-service:/app
      - ai_models:/app/models
    networks:
      - signlang-network

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: signlang-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NUXT_PUBLIC_API_BASE: http://localhost:8000
      NUXT_PUBLIC_AI_SERVICE_URL: http://localhost:8001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - signlang-network

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: signlang-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - signlang-network

volumes:
  mongodb_data:
    driver: local
  ai_models:
    driver: local

networks:
  signlang-network:
    driver: bridge
